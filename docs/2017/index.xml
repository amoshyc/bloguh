<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017s on Yu-Cheng Huang</title>
    <link>http://amoshyc.github.io/bloguh/2017.html</link>
    <description>Recent content in 2017s on Yu-Cheng Huang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Feb 2018 17:32:32 +0800</lastBuildDate>
    
	<atom:link href="http://amoshyc.github.io/bloguh/2017/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 Python 寄發 Gmail</title>
      <link>http://amoshyc.github.io/bloguh/2017/sending-gmail-in-python.html</link>
      <pubDate>Thu, 22 Feb 2018 17:32:32 +0800</pubDate>
      
      <guid>http://amoshyc.github.io/bloguh/2017/sending-gmail-in-python.html</guid>
      <description> 前情提要 之前跟學長在聊天，聊到他需要寄大量通知信給許多人，但希望每封信都有對方的名字。剛好有興趣，就搜了一下網路上的範例，整理出一個使用 python 3.x 從 Gmail 寄發 email 的程式。使用 SMTP、登入並且信件 SSL 加密。修改一下、加個迴圈就可以讓你的 gmail 大量寄垃圾信了（笑~
程式碼 123456789101112131415161718 import smtplib from email.mime.text import MIMEText gmail_user = &amp;#39;amoshuangyc@gmail.com&amp;#39; gmail_password = &amp;#39;---&amp;#39; # your gmail password msg = MIMEText(&amp;#39;content&amp;#39;) msg[&amp;#39;Subject&amp;#39;] = &amp;#39;Test&amp;#39; msg[&amp;#39;From&amp;#39;] = gmail_user msg[&amp;#39;To&amp;#39;] = &amp;#39;xxx@gmail.com&amp;#39; server = smtplib.SMTP_SSL(&amp;#39;smtp.gmail.com&amp;#39;, 465) server.ehlo() server.login(gmail_user, gmail_password) server.send_message(msg) server.quit() print(&amp;#39;Email sent!&amp;#39;)   注意事項  第一次寄信時，Google 會寄 email 警告寄信者「查看遭拒的登入嘗試」，開啟「低安全性應用程式」即可。 port 465 是 Google 訂定 的。 Gmail 有單天 500 封及單封 500 人的限制。 你可以不登入直接寄的樣子，只是很可能被判定為垃圾郵件或被 Gmail 說「不是本人寄的」，我沒試過~  </description>
    </item>
    
    <item>
      <title>Markdown Cheatsheet</title>
      <link>http://amoshyc.github.io/bloguh/2017/markdown-cheatsheet.html</link>
      <pubDate>Sat, 09 Dec 2017 13:55:37 +0800</pubDate>
      
      <guid>http://amoshyc.github.io/bloguh/2017/markdown-cheatsheet.html</guid>
      <description>Standard Markdown Inline Markup 常見的 Markdown 行內標記包含粗體、斜體 、刪除、程式碼、Footnote1 與超連結。他們使用方法分別為：
 粗體 ：**粗體** 或 __粗體__。 斜體 ：*斜體* 或 _斜體_。 刪除 ：~~刪除~~。 程式碼 ：將內容用 ` 包起來。 1：[^id]，其連結的位置為 [^id]: xxx。 超連結：[text](link “tooltip&amp;quot;)，&amp;quot;tooltip&amp;quot; 可以不寫。  其中要注意的是斜體後面得有空白，造成中文書寫時會有多餘空白，因此書寫中文時建議使用粗體代替。在這個 theme 中，所有的換行都會被保留，這有別於其他 theme，我認為這樣的書寫比較符合我自己的習慣。如果使用本 theme，建議將你的編輯器調成 wrap line 的模式。
Image ![Fedora 26](https://i.imgur.com/QzfKyxm.jpg)  這種圖片寬度固定為 theme 的寬度（預設是 700px）。
Code Block Code Block 一般用來放置一些簡短的、不需要顏色渲染的程式碼，例如在 conda 中創造一個虛擬環境的指令為：
conda create -n venv python=3.6 source activate venv  Block Quote  Block Quote 一般用來放要強調的東西。 也可以用來放詩詞等。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://amoshyc.github.io/bloguh/2017/markdown-cheatsheet-notebook.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://amoshyc.github.io/bloguh/2017/markdown-cheatsheet-notebook.html</guid>
      <description>temp  /*! * * Twitter Bootstrap * */ /*! * Bootstrap v3.3.7 (http://getbootstrap.com) * Copyright 2011-2016 Twitter, Inc. * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE) */ /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */ html { font-family: sans-serif; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; } body { margin: 0; } article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; } audio, canvas, progress, video { display: inline-block; vertical-align: baseline; } audio:not([controls]) { display: none; height: 0; } [hidden], template { display: none; } a { background-color: transparent; } a:active, a:hover { outline: 0; } abbr[title] { border-bottom: 1px dotted; } b, strong { font-weight: bold; } dfn { font-style: italic; } h1 { font-size: 2em; margin: 0.</description>
    </item>
    
  </channel>
</rss>